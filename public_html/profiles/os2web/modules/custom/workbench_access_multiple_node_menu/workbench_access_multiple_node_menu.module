<?php
/**
 * @file
 * workbench access multiple node menu module.
 *
 * This module bridges the gap between mulitple_node_menu and workbench_access
 * menu control.
 */

/**
 * Implements hook_form_alter().
 */
function workbench_access_multiple_node_menu_form_node_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['multiple_node_menu'])) {
    // Workbench access allowed menu parents.
    $options = workbench_access_active_options();

    // Process each existing menu item.
    foreach ($form['multiple_node_menu']['link']['current_links'] as $key => &$item) {
      if (is_numeric($key)) {
        workbench_access_multiple_node_menu_process($item, $options);
      }
    }

    // Alter add link form item.
    workbench_access_multiple_node_menu_process($form['multiple_node_menu']['link']['add_link'], $options);
  }
}

/**
 * Process form item for menu links.
 */
function workbench_access_multiple_node_menu_process(&$item, $options) {
  // Adjust the parent form.
  $parent = &$item['parent'];
  $current = $parent['#options'];

  foreach ($parent['#options'] as $key => $value) {
    $ids = explode(':', $key);
    $menu = $ids[0];
    $plid = $ids[1];
    // Unset if the user does not not have access to this item and the item
    // is not the current parent.
    if (!isset($options[$plid]) && !isset($options[$menu]) && (!$form['menu']['enabled']['#default_value'] || $key != $parent['#default_value'])) {
      unset($parent['#options'][$key]);
    }
  }
}
